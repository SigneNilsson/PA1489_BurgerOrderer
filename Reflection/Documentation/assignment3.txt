Assignment 3:

<<<<Testing and Debugging>>>


Names of everyone on the team:

Signe Nilsson
Eidam Holgaard
Seyed Mostafa Mohseni

Link to the project page on the git server:

https://github.com/SigneNilsson/PA1489_BurgerOrderer.git

-Testplan
As most of the items and concepts of 5.1.1 in the assignment where new to us it was hard to make a plan for the tests. For example, as we were 
to make the plan for testing in the beginning we did not even know what a module was. Even less we knew how to test it! We did not know what an API endpoint
was, we did not know what technologies existed for testing. And even though Mikael had a lecture on debugging and testing, it was hard to make a plan of how to make 
it was so many things we hadn't met before. So we decided to test our code manually continuously and try to manage automated tests in the end. And thats a plan 
we could stick to, even though it's vague.

-Brief summary of which functionality you have tested:




-Brief summary of how you have completed the tests:


-Printout from your last test session, so you can see:
• How many tests you have written
• What they test
• How many tests succeed or fail



-Your experiences about writing automated unit tests.
• What went well?
We did manage to use pytest successfully, even though it only tests a small part of the code.

• What went less well?
As automated tests are new to us, we didn't make any tests that actually test functionality of
a large part of the code, so it's not that useful. It was hard knowing how to use the automated tests in a 
useful way.

• How did you solve the difficulties? Could you have done differently?
As automated tests is yet another new component in our toolbox we think we couldn't have done anything differently on this point
given our starting point.
We had to focus on functionality and all new concepts required to make the app work, before thinking on testing. Although now 
that we know that automated tests exist it seems best to implement them from start.

• What did you not manage to solve? Why not?
We do not test all of the functions. See why in previous answer.


To do a automated test by Pytest:
we created a test file (buydef-test.py)in burger_order and tested the function "def addOptions()".
In the terminal under the file burger_order we runed command, python -m pytest buydef-test.py, and get the following print-out!

the output:

$ python -m pytest buydef-test.py
============================= test session starts =============================
platform win32 -- Python 3.11.9, pytest-8.3.3, pluggy-1.5.0
rootdir: C:\Users\mosta\OneDrive\Dokuments\GitHub\Grupptest\Containers\burger_orderer
collected 1 item

buydef-test.py .                                                         [100%]

============================== 1 passed in 0.01s ==============================


The test successfully passed!


försöka skriva automatiserade testet när det passar under tiden
-testa så att burger orderer fungerar med sida i localhost
-testa så att kitchenview fugnerar med sida i localhost
-testa submitknappen genom klicka och se om information skickas vidare.
-testa databasuppkoppling
-testa använda information från databas i utskrifter.


15/10 tried using pytest to make automated tests. We started by installing pytest using pip install and creating a simple test file to try it out. Unfortunately it does not seem to work at all initially. 
Will come back with entry when it's working.
